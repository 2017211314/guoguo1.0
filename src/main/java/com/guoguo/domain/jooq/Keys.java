/*
 * This file is generated by jOOQ.
*/
package com.guoguo.domain.jooq;


import com.guoguo.domain.jooq.tables.TPermission;
import com.guoguo.domain.jooq.tables.TRole;
import com.guoguo.domain.jooq.tables.TRolePermission;
import com.guoguo.domain.jooq.tables.TUser;
import com.guoguo.domain.jooq.tables.TUserRole;
import com.guoguo.domain.jooq.tables.records.TPermissionRecord;
import com.guoguo.domain.jooq.tables.records.TRolePermissionRecord;
import com.guoguo.domain.jooq.tables.records.TRoleRecord;
import com.guoguo.domain.jooq.tables.records.TUserRecord;
import com.guoguo.domain.jooq.tables.records.TUserRoleRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>guoguo</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TPermissionRecord, Integer> IDENTITY_T_PERMISSION = Identities0.IDENTITY_T_PERMISSION;
    public static final Identity<TRoleRecord, Integer> IDENTITY_T_ROLE = Identities0.IDENTITY_T_ROLE;
    public static final Identity<TRolePermissionRecord, Integer> IDENTITY_T_ROLE_PERMISSION = Identities0.IDENTITY_T_ROLE_PERMISSION;
    public static final Identity<TUserRecord, Integer> IDENTITY_T_USER = Identities0.IDENTITY_T_USER;
    public static final Identity<TUserRoleRecord, Integer> IDENTITY_T_USER_ROLE = Identities0.IDENTITY_T_USER_ROLE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<TPermissionRecord> KEY_T_PERMISSION_PRIMARY = UniqueKeys0.KEY_T_PERMISSION_PRIMARY;
    public static final UniqueKey<TRoleRecord> KEY_T_ROLE_PRIMARY = UniqueKeys0.KEY_T_ROLE_PRIMARY;
    public static final UniqueKey<TRolePermissionRecord> KEY_T_ROLE_PERMISSION_PRIMARY = UniqueKeys0.KEY_T_ROLE_PERMISSION_PRIMARY;
    public static final UniqueKey<TUserRecord> KEY_T_USER_PRIMARY = UniqueKeys0.KEY_T_USER_PRIMARY;
    public static final UniqueKey<TUserRecord> KEY_T_USER_USERNAME = UniqueKeys0.KEY_T_USER_USERNAME;
    public static final UniqueKey<TUserRecord> KEY_T_USER_PHONE = UniqueKeys0.KEY_T_USER_PHONE;
    public static final UniqueKey<TUserRoleRecord> KEY_T_USER_ROLE_PRIMARY = UniqueKeys0.KEY_T_USER_ROLE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<TPermissionRecord, Integer> IDENTITY_T_PERMISSION = Internal.createIdentity(TPermission.T_PERMISSION, TPermission.T_PERMISSION.ID);
        public static Identity<TRoleRecord, Integer> IDENTITY_T_ROLE = Internal.createIdentity(TRole.T_ROLE, TRole.T_ROLE.ID);
        public static Identity<TRolePermissionRecord, Integer> IDENTITY_T_ROLE_PERMISSION = Internal.createIdentity(TRolePermission.T_ROLE_PERMISSION, TRolePermission.T_ROLE_PERMISSION.ID);
        public static Identity<TUserRecord, Integer> IDENTITY_T_USER = Internal.createIdentity(TUser.T_USER, TUser.T_USER.ID);
        public static Identity<TUserRoleRecord, Integer> IDENTITY_T_USER_ROLE = Internal.createIdentity(TUserRole.T_USER_ROLE, TUserRole.T_USER_ROLE.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<TPermissionRecord> KEY_T_PERMISSION_PRIMARY = Internal.createUniqueKey(TPermission.T_PERMISSION, "KEY_t_permission_PRIMARY", TPermission.T_PERMISSION.ID);
        public static final UniqueKey<TRoleRecord> KEY_T_ROLE_PRIMARY = Internal.createUniqueKey(TRole.T_ROLE, "KEY_t_role_PRIMARY", TRole.T_ROLE.ID);
        public static final UniqueKey<TRolePermissionRecord> KEY_T_ROLE_PERMISSION_PRIMARY = Internal.createUniqueKey(TRolePermission.T_ROLE_PERMISSION, "KEY_t_role_permission_PRIMARY", TRolePermission.T_ROLE_PERMISSION.ID);
        public static final UniqueKey<TUserRecord> KEY_T_USER_PRIMARY = Internal.createUniqueKey(TUser.T_USER, "KEY_t_user_PRIMARY", TUser.T_USER.ID);
        public static final UniqueKey<TUserRecord> KEY_T_USER_USERNAME = Internal.createUniqueKey(TUser.T_USER, "KEY_t_user_username", TUser.T_USER.USERNAME);
        public static final UniqueKey<TUserRecord> KEY_T_USER_PHONE = Internal.createUniqueKey(TUser.T_USER, "KEY_t_user_phone", TUser.T_USER.PHONE);
        public static final UniqueKey<TUserRoleRecord> KEY_T_USER_ROLE_PRIMARY = Internal.createUniqueKey(TUserRole.T_USER_ROLE, "KEY_t_user_role_PRIMARY", TUserRole.T_USER_ROLE.ID);
    }
}
