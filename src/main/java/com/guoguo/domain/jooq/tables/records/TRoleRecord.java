/*
 * This file is generated by jOOQ.
*/
package com.guoguo.domain.jooq.tables.records;


import com.guoguo.domain.jooq.tables.TRole;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 角色表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TRoleRecord extends UpdatableRecordImpl<TRoleRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = 292806989;

    /**
     * Setter for <code>guoguo.t_role.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>guoguo.t_role.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>guoguo.t_role.role_name</code>. 角色名称
     */
    public void setRoleName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>guoguo.t_role.role_name</code>. 角色名称
     */
    public String getRoleName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>guoguo.t_role.description</code>. 角色描述
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>guoguo.t_role.description</code>. 角色描述
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>guoguo.t_role.available</code>. 是否启用 0-禁用，1-启用
     */
    public void setAvailable(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>guoguo.t_role.available</code>. 是否启用 0-禁用，1-启用
     */
    public String getAvailable() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return TRole.T_ROLE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TRole.T_ROLE.ROLE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return TRole.T_ROLE.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return TRole.T_ROLE.AVAILABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getRoleName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getAvailable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getRoleName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getAvailable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRoleRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRoleRecord value2(String value) {
        setRoleName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRoleRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRoleRecord value4(String value) {
        setAvailable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRoleRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TRoleRecord
     */
    public TRoleRecord() {
        super(TRole.T_ROLE);
    }

    /**
     * Create a detached, initialised TRoleRecord
     */
    public TRoleRecord(Integer id, String roleName, String description, String available) {
        super(TRole.T_ROLE);

        set(0, id);
        set(1, roleName);
        set(2, description);
        set(3, available);
    }
}
