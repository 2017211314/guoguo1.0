/*
 * This file is generated by jOOQ.
*/
package com.guoguo.domain.jooq.tables;


import com.guoguo.domain.jooq.Guoguo;
import com.guoguo.domain.jooq.Indexes;
import com.guoguo.domain.jooq.Keys;
import com.guoguo.domain.jooq.tables.records.TRolePermissionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 角色权限表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TRolePermission extends TableImpl<TRolePermissionRecord> {

    private static final long serialVersionUID = -387310908;

    /**
     * The reference instance of <code>guoguo.t_role_permission</code>
     */
    public static final TRolePermission T_ROLE_PERMISSION = new TRolePermission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TRolePermissionRecord> getRecordType() {
        return TRolePermissionRecord.class;
    }

    /**
     * The column <code>guoguo.t_role_permission.id</code>.
     */
    public final TableField<TRolePermissionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>guoguo.t_role_permission.permission_id</code>.
     */
    public final TableField<TRolePermissionRecord, Integer> PERMISSION_ID = createField("permission_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>guoguo.t_role_permission.role_id</code>.
     */
    public final TableField<TRolePermissionRecord, Integer> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>guoguo.t_role_permission</code> table reference
     */
    public TRolePermission() {
        this(DSL.name("t_role_permission"), null);
    }

    /**
     * Create an aliased <code>guoguo.t_role_permission</code> table reference
     */
    public TRolePermission(String alias) {
        this(DSL.name(alias), T_ROLE_PERMISSION);
    }

    /**
     * Create an aliased <code>guoguo.t_role_permission</code> table reference
     */
    public TRolePermission(Name alias) {
        this(alias, T_ROLE_PERMISSION);
    }

    private TRolePermission(Name alias, Table<TRolePermissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private TRolePermission(Name alias, Table<TRolePermissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "角色权限表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Guoguo.GUOGUO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ROLE_PERMISSION_PERMISSIONID, Indexes.T_ROLE_PERMISSION_PRIMARY, Indexes.T_ROLE_PERMISSION_ROLEID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TRolePermissionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_ROLE_PERMISSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TRolePermissionRecord> getPrimaryKey() {
        return Keys.KEY_T_ROLE_PERMISSION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TRolePermissionRecord>> getKeys() {
        return Arrays.<UniqueKey<TRolePermissionRecord>>asList(Keys.KEY_T_ROLE_PERMISSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRolePermission as(String alias) {
        return new TRolePermission(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRolePermission as(Name alias) {
        return new TRolePermission(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TRolePermission rename(String name) {
        return new TRolePermission(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TRolePermission rename(Name name) {
        return new TRolePermission(name, null);
    }
}
