/*
 * This file is generated by jOOQ.
*/
package com.guoguo.domain.jooq.tables;


import com.guoguo.domain.jooq.Guoguo;
import com.guoguo.domain.jooq.Indexes;
import com.guoguo.domain.jooq.Keys;
import com.guoguo.domain.jooq.tables.records.TPermissionRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 权限表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPermission extends TableImpl<TPermissionRecord> {

    private static final long serialVersionUID = 1944136092;

    /**
     * The reference instance of <code>guoguo.t_permission</code>
     */
    public static final TPermission T_PERMISSION = new TPermission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TPermissionRecord> getRecordType() {
        return TPermissionRecord.class;
    }

    /**
     * The column <code>guoguo.t_permission.id</code>.
     */
    public final TableField<TPermissionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>guoguo.t_permission.name</code>. 名称
     */
    public final TableField<TPermissionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "名称");

    /**
     * The column <code>guoguo.t_permission.resource_type</code>. 权限分类（0 菜单；1 功能）
     */
    public final TableField<TPermissionRecord, String> RESOURCE_TYPE = createField("resource_type", org.jooq.impl.SQLDataType.VARCHAR(1).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "权限分类（0 菜单；1 功能）");

    /**
     * The column <code>guoguo.t_permission.permission</code>. 操作权限
     */
    public final TableField<TPermissionRecord, String> PERMISSION = createField("permission", org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "操作权限");

    /**
     * The column <code>guoguo.t_permission.url</code>. 资源路径
     */
    public final TableField<TPermissionRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "资源路径");

    /**
     * The column <code>guoguo.t_permission.parent_id</code>. 父id
     */
    public final TableField<TPermissionRecord, Integer> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGER, this, "父id");

    /**
     * The column <code>guoguo.t_permission.sort</code>. 排序
     */
    public final TableField<TPermissionRecord, Byte> SORT = createField("sort", org.jooq.impl.SQLDataType.TINYINT, this, "排序");

    /**
     * The column <code>guoguo.t_permission.icon</code>. 图标
     */
    public final TableField<TPermissionRecord, String> ICON = createField("icon", org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "图标");

    /**
     * The column <code>guoguo.t_permission.insert_time</code>. 添加时间
     */
    public final TableField<TPermissionRecord, Timestamp> INSERT_TIME = createField("insert_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "添加时间");

    /**
     * The column <code>guoguo.t_permission.update_time</code>. 更新时间
     */
    public final TableField<TPermissionRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * Create a <code>guoguo.t_permission</code> table reference
     */
    public TPermission() {
        this(DSL.name("t_permission"), null);
    }

    /**
     * Create an aliased <code>guoguo.t_permission</code> table reference
     */
    public TPermission(String alias) {
        this(DSL.name(alias), T_PERMISSION);
    }

    /**
     * Create an aliased <code>guoguo.t_permission</code> table reference
     */
    public TPermission(Name alias) {
        this(alias, T_PERMISSION);
    }

    private TPermission(Name alias, Table<TPermissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private TPermission(Name alias, Table<TPermissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "权限表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Guoguo.GUOGUO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PERMISSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TPermissionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_PERMISSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TPermissionRecord> getPrimaryKey() {
        return Keys.KEY_T_PERMISSION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TPermissionRecord>> getKeys() {
        return Arrays.<UniqueKey<TPermissionRecord>>asList(Keys.KEY_T_PERMISSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPermission as(String alias) {
        return new TPermission(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPermission as(Name alias) {
        return new TPermission(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TPermission rename(String name) {
        return new TPermission(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TPermission rename(Name name) {
        return new TPermission(name, null);
    }
}
