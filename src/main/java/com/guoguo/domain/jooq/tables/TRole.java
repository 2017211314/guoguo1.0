/*
 * This file is generated by jOOQ.
*/
package com.guoguo.domain.jooq.tables;


import com.guoguo.domain.jooq.Guoguo;
import com.guoguo.domain.jooq.Indexes;
import com.guoguo.domain.jooq.Keys;
import com.guoguo.domain.jooq.tables.records.TRoleRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 角色表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TRole extends TableImpl<TRoleRecord> {

    private static final long serialVersionUID = 1033698252;

    /**
     * The reference instance of <code>guoguo.t_role</code>
     */
    public static final TRole T_ROLE = new TRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TRoleRecord> getRecordType() {
        return TRoleRecord.class;
    }

    /**
     * The column <code>guoguo.t_role.id</code>.
     */
    public final TableField<TRoleRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>guoguo.t_role.role_name</code>. 角色名称
     */
    public final TableField<TRoleRecord, String> ROLE_NAME = createField("role_name", org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "角色名称");

    /**
     * The column <code>guoguo.t_role.description</code>. 角色描述
     */
    public final TableField<TRoleRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "角色描述");

    /**
     * The column <code>guoguo.t_role.available</code>. 是否启用 0-禁用，1-启用
     */
    public final TableField<TRoleRecord, String> AVAILABLE = createField("available", org.jooq.impl.SQLDataType.VARCHAR(2).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.VARCHAR)), this, "是否启用 0-禁用，1-启用");

    /**
     * Create a <code>guoguo.t_role</code> table reference
     */
    public TRole() {
        this(DSL.name("t_role"), null);
    }

    /**
     * Create an aliased <code>guoguo.t_role</code> table reference
     */
    public TRole(String alias) {
        this(DSL.name(alias), T_ROLE);
    }

    /**
     * Create an aliased <code>guoguo.t_role</code> table reference
     */
    public TRole(Name alias) {
        this(alias, T_ROLE);
    }

    private TRole(Name alias, Table<TRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private TRole(Name alias, Table<TRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "角色表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Guoguo.GUOGUO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TRoleRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_ROLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TRoleRecord> getPrimaryKey() {
        return Keys.KEY_T_ROLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<TRoleRecord>>asList(Keys.KEY_T_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRole as(String alias) {
        return new TRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRole as(Name alias) {
        return new TRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TRole rename(String name) {
        return new TRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TRole rename(Name name) {
        return new TRole(name, null);
    }
}
